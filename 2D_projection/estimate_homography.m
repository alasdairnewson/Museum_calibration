%Estimation of the homography:
%from pixel coordinates TO real world coordinates on a plane surface
%inputs :
% pixelCoords :
%[x0 y0; x1 y1; x2 y2; x3 y3; x4 y3]
% realWorldCoords :
%[x0 y0; x1 y1; x2 y2; x3 y3; x4 y3]

function[H] = estimate_homography(pixelCoords,realWorldCoords)

    %first row, and w parameters
    A = [pixelCoords(1,1) pixelCoords(1,2) 1 ...
         0 0 0 ...
         -pixelCoords(1,1)*realWorldCoords(1,1) -pixelCoords(1,2)*realWorldCoords(1,1); ...
         0 0 0 ...
         pixelCoords(1,1) pixelCoords(1,2) 1 ...
         -pixelCoords(1,1)*realWorldCoords(1,2) -pixelCoords(1,2)*realWorldCoords(1,2);  ...
         ...
         ...
         pixelCoords(2,1) pixelCoords(2,2) 1 ...
         0 0 0 ...
         -pixelCoords(2,1)*realWorldCoords(2,1) -pixelCoords(2,2)*realWorldCoords(2,1); ...
         0 0 0 ...
         pixelCoords(2,1) pixelCoords(2,2) 1 ...
         -pixelCoords(2,1)*realWorldCoords(2,2) -pixelCoords(2,2)*realWorldCoords(2,2);  ...
         ...
         ...
         pixelCoords(3,1) pixelCoords(3,2) 1 ...
         0 0 0 ...
         -pixelCoords(3,1)*realWorldCoords(3,1) -pixelCoords(3,2)*realWorldCoords(3,1); ...
         0 0 0 ...
         pixelCoords(3,1) pixelCoords(3,2) 1 ...
         -pixelCoords(3,1)*realWorldCoords(3,2) -pixelCoords(3,2)*realWorldCoords(3,2);  ...
         ...
         ...
         pixelCoords(4,1) pixelCoords(4,2) 1 ...
         0 0 0 ...
         -pixelCoords(4,1)*realWorldCoords(4,1) -pixelCoords(4,2)*realWorldCoords(4,1); ...
         0 0 0 ...
         pixelCoords(4,1) pixelCoords(4,2) 1 ...
         -pixelCoords(4,1)*realWorldCoords(4,2) -pixelCoords(4,2)*realWorldCoords(4,2)];
         
    b =[realWorldCoords(1,1);...
        realWorldCoords(1,2);...
        realWorldCoords(2,1);...
        realWorldCoords(2,2);...
        realWorldCoords(3,1);...
        realWorldCoords(3,2);...
        realWorldCoords(4,1);...
        realWorldCoords(4,2);];

    %solve the inversion
    Hinv = A\b;
    Hinv(end+1) = 1;
    H = reshape(Hinv,[3 3])';
end